/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useFrame } from '@react-three/fiber'
import { Group } from 'three'
import { Turn } from '../types/situation'

type GLTFResult = GLTF & {
  nodes: {
    Torus002: THREE.Mesh
  }
  materials: {
    ['Material.012']: THREE.MeshStandardMaterial
  }
}

// eslint-disable-next-line no-undef
export default function Ring(props: JSX.IntrinsicElements['group'] & { color: (Turn | 'silver')}) {
  const group = useRef<THREE.Group>({} as Group)
  useFrame(() => {
    group.current.rotation.x += 0.01;
  });
  const { nodes, materials } = useGLTF('/ring.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus002.geometry}
        material={materials['Material.012']}
        material-color={props.color === 'red' ? 0xff0000 : props.color==='blue' ? 0x0000ff : 0xbababa }
        scale={[2.96, 1.13, 1.13]}
      />
    </group>
  )
}

useGLTF.preload('/ring.glb')
