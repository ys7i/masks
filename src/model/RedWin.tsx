/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';
import { Turn } from '../types/situation';

type GLTFResult = GLTF & {
  nodes: {
    Red: THREE.Mesh;
  };
  materials: {
    ['Material.008']: THREE.MeshStandardMaterial;
  };
};

// eslint-disable-next-line no-undef
export default function Model(props: JSX.IntrinsicElements['group'] & {color: Turn}) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF('/redWin.gltf') as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Red.geometry}
        material={materials['Material.008']}
        scale={0.07}
        position={[0.3, 0, -1.7]}
        rotation={props.color === 'red'? [0, Math.PI, 0] : [0, 0, 0]}
        material-color={props.color === 'red' ? 0xff0000 : 0x0000ff}
      />
    </group>
  );
}

useGLTF.preload('/redWin.gltf');
