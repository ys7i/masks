/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { Turn } from '../types/situation'

type GLTFResult = GLTF & {
  nodes: {
    Red001: THREE.Mesh
  }
}

// eslint-disable-next-line no-undef
export default function Model(props: JSX.IntrinsicElements['group'] & { color: Turn}) {
  const group = useRef<THREE.Group>()
  const { nodes } = useGLTF('/win.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Red001.geometry}
        material={props.color === 'red' ? new THREE.MeshStandardMaterial({ color: 0xFF0000 }) : new THREE.MeshStandardMaterial({ color: 0x0000FF })}
        // position={[-10.1, -3.01, -18.03]}
        rotation={ props.color==='red' ? [0, Math.PI, 0]: [0, 0, 0] }
        scale={0.08}
      />
    </group>
  )
}

useGLTF.preload('/win.glb')
