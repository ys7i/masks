/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh
  }
  materials: {
    ['Material.013']: THREE.MeshStandardMaterial
  }
}

// eslint-disable-next-line no-undef
export default function SquareModel(props: JSX.IntrinsicElements['group'] & { clickMethod: any, place: string, me: string }) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/square.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null} onClick={() => { props.clickMethod(props.me, props.place) }}>
      <mesh castShadow receiveShadow geometry={nodes.Cube002.geometry} material={materials['Material.013']} />
    </group>
  )
}

useGLTF.preload('/square.glb')
